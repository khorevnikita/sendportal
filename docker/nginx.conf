# Define custom log format to include reponse times
log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       '$request_time $upstream_response_time $pipe $upstream_cache_status';

access_log /dev/stdout main_timed;
error_log /dev/stderr notice;

client_max_body_size 25M;

server {
    fastcgi_read_timeout 180;

    listen [::]:8080 default_server;
    listen 8080 default_server;
    server_name _;

    index index.php index.html;

    root /var/www/html/public/;

    # enforce NO www
    if ($host ~* ^www\.(.*))
    {
        set $host_without_www $1;
        rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
    }
    location ^~ /chats {
#        proxy_set_header Host $host;
#        rewrite ^/chats(.*)$ /$1 break;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Scheme $scheme;
        proxy_redirect off;
        proxy_intercept_errors on;
        proxy_hide_header Cache-Control;
        add_header Cache-Control 'no-store, no-cache';
        proxy_pass http://chats.codenrock.com.website.yandexcloud.net;
        error_page 404 =200 /chats/index.html;
    }


#CNDRPRX    location = /blog/wp-admin {
#CNDRPRX       return 301 https://$host/blog/wp-admin/;
#CNDRPRX    }

#CNDRPRX    location /blog {
#CNDRPRX#        proxy_set_header Host $host;
#CNDRPRX        rewrite ^/blog(.*)$ /$1 break;
#CNDRPRX        proxy_set_header X-Real-IP $remote_addr;
#CNDRPRX        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#CNDRPRX        proxy_set_header X-Scheme $scheme;
#CNDRPRX        proxy_pass https://blog.codenrock.com;
#CNDRPRX        proxy_redirect off;
#CNDRPRX#        proxy_redirect https://blog.codenrock.com:443 /;
#CNDRPRX    }
#CNDRPRX    location ^~ /blog/ {
#CNDRPRX#        proxy_set_header Host $host;
#CNDRPRX        rewrite ^/blog/(.*)$ /$1 break;
#CNDRPRX        proxy_set_header X-Real-IP $remote_addr;
#CNDRPRX        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#CNDRPRX        proxy_set_header X-Scheme $scheme;
#CNDRPRX        proxy_pass https://blog.codenrock.com;
#CNDRPRX        proxy_redirect off;
#CNDRPRX#        proxy_redirect https://blog.codenrock.com:443 /;
#CNDRPRX    }
#CNDRPRX
#CNDRPRX    location /codenrock {
#CNDRPRX        proxy_ssl_server_name on;
#CNDRPRX#        proxy_set_header Host $host;
#CNDRPRX        proxy_set_header X-Real-IP $remote_addr;
#CNDRPRX#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#CNDRPRX#        proxy_set_header X-Scheme $scheme;
#CNDRPRX        proxy_pass https://codenrock.gitbook.io/codenrock/;
#CNDRPRX    }


    location / {
        auth_basic off;
        auth_basic_user_file /etc/nginx/.htpasswd;
        #add_header "Access-Control-Allow-Origin" *;
        try_files $uri $uri/ /index.php?$query_string;
        # unless the request is for a valid file (image, js, css, etc.), send to bootstrap

        location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
            access_log off;
            expires max;
            log_not_found off;
        }

        if (!-e $request_filename)
        {
                rewrite ^/(.*)$ /index.php?/$1 last;
                break;
        }
    }

    location ~ \.php$ {
        #add_header "Access-Control-Allow-Origin" *;
        try_files $uri $uri/ /index.php$is_args$args;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|ttf)$ {
        expires 30d;
    }
}
